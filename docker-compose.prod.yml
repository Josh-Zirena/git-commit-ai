version: '3.8'

# Production-specific Docker Compose configuration
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  app:
    image: git-commit-ai:${IMAGE_TAG:-latest}
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
      rollback_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
    environment:
      - NODE_ENV=production
      - PORT=3000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOG_LEVEL=info
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`${DOMAIN}`)"
      - "traefik.http.services.app.loadbalancer.server.port=3000"

  nginx:
    volumes:
      - ./nginx/production.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
      - /var/log/nginx:/var/log/nginx
    environment:
      - DOMAIN=${DOMAIN:-localhost}
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # Log aggregation (optional)
  fluentd:
    image: fluentd:v1.16-debian-1
    container_name: git-commit-ai-fluentd
    volumes:
      - ./fluentd/conf:/fluentd/etc
      - app_logs:/var/log/app
      - nginx_logs:/var/log/nginx
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    networks:
      - app_network
    restart: unless-stopped

  # Monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: git-commit-ai-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - app_network
    restart: unless-stopped

volumes:
  prometheus_data:
    driver: local